function [net, info] = Function_training(trainY, trainX, valX, valLabels)
    layers = [ ...
        sequenceInputLayer(45)
        bilstmLayer(50, 'OutputMode', 'sequence')
        reluLayer
        dropoutLayer(0.2)
        bilstmLayer(50, 'OutputMode', 'sequence')
        reluLayer
        dropoutLayer(0.2)
        fullyConnectedLayer(2)
        softmaxLayer
        classificationLayer
    ];

    options = trainingOptions('adam', ...
        'MaxEpochs',10, ...
        'MiniBatchSize',50, ...
        'InitialLearnRate',0.01, ...
        'LearnRateDropPeriod',3, ...
        'LearnRateSchedule','piecewise', ...
        'GradientThreshold',1, ...
        'ValidationData', {valX, valLabels}, ...
        'ValidationFrequency',50, ...
        'ValidationPatience', 6, ...
        'Plots','training-progress',...
        'Verbose',1);
    
    [net, info] = trainNetwork(trainX,trainY,layers,options);
end
